package dll

import (
	"encoding/hex"
	"testing"

	"github.com/stretchr/testify/assert"
)

// test serial + bruteforced code using DLL calls
const (
	XML_VECTOR            = "3806564553AEF4E69858FB1FA8165D51F7EA40293792D20F0600010F6301000000C802010600010200000000000000000000000000000000"
	MAGIC_PIN             = "111111"
	TEST1_SERIAL_NUMBER   = "1234567"
	TEST1_ACTIVATION_CODE = "10000000000000000053"
	TEST2_SERIAL_NUMBER   = "7654321"
	TEST2_ACTIVATION_CODE = "10000000000000000326"
)

func TestActivate1(t *testing.T) {
	out1, out2, err := Activate(XML_VECTOR, TEST1_SERIAL_NUMBER, TEST1_ACTIVATION_CODE, MAGIC_PIN)

	assert.Nil(t, err)
	assert.Equal(t, hex.EncodeToString(out1), "3806564553fe532f185adf9c55b77e70a4bb184e1092d20f0600010f6301000000c8020106000102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
	assert.Equal(t, hex.EncodeToString(out2), "3801313233343536370007f8e006ac302d4a173e8618498489b400000000000000000000000000000000000000000000000000000000010f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
}

func TestActivate2(t *testing.T) {
	out1, out2, err := Activate(XML_VECTOR, TEST2_SERIAL_NUMBER, TEST2_ACTIVATION_CODE, MAGIC_PIN)

	assert.Nil(t, err)
	assert.Equal(t, hex.EncodeToString(out1), "38065645539dd505ca2089361114aba749a48cb78992d20f0600010f6301000000c8020106000102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
	assert.Equal(t, hex.EncodeToString(out2), "3801373635343332310055ba88348a4d63757503eaea9bdf7f3200000000000000000000000000000000000000000000000000000000010f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
}
